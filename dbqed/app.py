# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/88_app.ipynb (unless otherwise specified).

__all__ = ['AUTHOR_INFO', 'APP_NAME', 'SideBar', 'create_sidebar', 'app_mainscreen', 'notebook_mainscreen', 'sb']

# Cell
import numpy as np
import pandas as pd
import datetime as dt
import streamlit as st

# TODO: Add local project imports

from pandas_profiling import ProfileReport
from streamlit_pandas_profiling import st_profile_report

# Cell
AUTHOR_INFO = 'AUTHOR: [Michael J. Booth](https://about.me/mjboothaus)'
APP_NAME = 'DataBooth: Qualify Explore Data app'

# Cell
class SideBar:
    datasource = 'To be defined'
    datasize = 0   # look to calculate this (in MB?)
    author = AUTHOR_INFO
    title = 'Data details...'
    data_local = False
    selected_data = None
    calc_corr = False


def create_sidebar():
    sb = SideBar()
    st.sidebar.markdown(sb.author)
    st.sidebar.markdown(sb.datasource)
    st.sidebar.info(sb.title)
    st.sidebar.markdown('Datasize: ' + str(sb.datasize))
    #TODO: Add file chooser
    #sb.calc_corr = st.sidebar.checkbox('Calculate correlations?', value=False)
    return sb


def app_mainscreen(df, pr, APP_NAME):
    st.title(APP_NAME)

    st.write(df)
    st.header('Data Profile:')
    st_profile_report(pr)

    return df

# Cell
def notebook_mainscreen(df, pr, APP_NAME):
    print(APP_NAME)


    # Dataframe / Profiling example

    print(df.head(5))
    print('Data Profile:')
    pr

# Cell
sb = create_sidebar()

#TODO: Sort data load - df = datapipe.load_and_cache_raw_data()

if sb.calc_corr:
    pr = ProfileReport(df, explorative=True)
else:
    pr = ProfileReport(df, explorative=True, correlations=None)


if core.in_notebook():
    notebook_mainscreen(df, pr, APP_NAME)
else:
    df = app_mainscreen(df, pr, APP_NAME)